"use strict";(self.webpackChunkliquid_docs=self.webpackChunkliquid_docs||[]).push([[533],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return k}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var d=r.createContext({}),p=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(d.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,d=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=p(n),k=o,f=s["".concat(d,".").concat(k)]||s[k]||c[k]||i;return n?r.createElement(f,a(a({ref:t},u),{},{components:n})):r.createElement(f,a({ref:t},u))}));function k(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=s;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},8314:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return d},metadata:function(){return p},toc:function(){return u},default:function(){return s}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],l={},d="liquid.ast.Node",p={unversionedId:"api/node",id:"api/node",title:"liquid.ast.Node",description:"Abstract base class for all nodes in a parse tree.",source:"@site/docs/api/node.md",sourceDirName:"api",slug:"/api/node",permalink:"/liquid/api/node",editUrl:"https://github.com/jg-rp/liquid/tree/docs/docs/api/node.md",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"liquid.tag.Tag",permalink:"/liquid/api/Tag"},next:{title:"liquid.exceptions",permalink:"/liquid/api/exceptions"}},u=[{value:"<code>Node</code>",id:"node",children:[],level:2},{value:"Properties",id:"properties",children:[{value:"<code>tok</code>",id:"tok",children:[],level:3}],level:2},{value:"Methods",id:"methods",children:[{value:"<code>token</code>",id:"token",children:[],level:3},{value:"<code>render</code>",id:"render",children:[],level:3},{value:"<code>render_async</code>",id:"render_async",children:[],level:3},{value:"<code>render_to_output</code>",id:"render_to_output",children:[],level:3},{value:"<code>render_to_output_async</code>",id:"render_to_output_async",children:[],level:3}],level:2}],c={toc:u};function s(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"liquidastnode"},"liquid.ast.Node"),(0,i.kt)("p",null,"Abstract base class for all nodes in a parse tree."),(0,i.kt)("h2",{id:"node"},(0,i.kt)("inlineCode",{parentName:"h2"},"Node")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"class Node()")),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"tok"},(0,i.kt)("inlineCode",{parentName:"h3"},"tok")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Type"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"liquid.token.Token")),(0,i.kt)("p",null,"The token that started this node. All subclasses of include a ",(0,i.kt)("inlineCode",{parentName:"p"},"tok")," property or override ",(0,i.kt)("a",{parentName:"p",href:"#token"},"token()"),"."),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"token"},(0,i.kt)("inlineCode",{parentName:"h3"},"token")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"token() -> liquid.token.Token")),(0,i.kt)("p",null,"Return the token that started this node. Looks for ",(0,i.kt)("a",{parentName:"p",href:"#tok"},(0,i.kt)("inlineCode",{parentName:"a"},"self.tok")),"."),(0,i.kt)("h3",{id:"render"},(0,i.kt)("inlineCode",{parentName:"h3"},"render")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"render(context: Context, buffer: TextIO) -> Optional[bool]")),(0,i.kt)("p",null,"Check disabled tags before delegating to ",(0,i.kt)("a",{parentName:"p",href:"#render-to-output"},"render_to_output"),"."),(0,i.kt)("h3",{id:"render_async"},(0,i.kt)("inlineCode",{parentName:"h3"},"render_async")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"async render_async(context: Context, buffer: TextIO) -> Optional[bool]")),(0,i.kt)("p",null,"An async version of ",(0,i.kt)("a",{parentName:"p",href:"#render"},"render")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Raises"),": DisabledTagError if ",(0,i.kt)("inlineCode",{parentName:"p"},"self.token()")," is disabled in the current context."),(0,i.kt)("h3",{id:"render_to_output"},(0,i.kt)("inlineCode",{parentName:"h3"},"render_to_output")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"render_to_output(context: Context, buffer: TextIO) -> Optional[bool]")),(0,i.kt)("p",null,"Abstract method. Render this node to the output buffer with the given context."),(0,i.kt)("h3",{id:"render_to_output_async"},(0,i.kt)("inlineCode",{parentName:"h3"},"render_to_output_async")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"async render_to_output_async(context: Context, buffer: TextIO) -> Optional[bool]")),(0,i.kt)("p",null,"An async version of ",(0,i.kt)("a",{parentName:"p",href:"#render-to-output"},"render_to_output"),". Delegates to ","[render_to_output]"," by default."))}s.isMDXComponent=!0}}]);
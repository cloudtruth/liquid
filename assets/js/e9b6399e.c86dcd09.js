"use strict";(self.webpackChunkliquid_docs=self.webpackChunkliquid_docs||[]).push([[984],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(f,s(s({ref:t},l),{},{components:n})):r.createElement(f,s({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var p=2;p<o;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7015:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return l},default:function(){return d}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),s=["components"],i={},c="Async Support",p={unversionedId:"introduction/async-support",id:"introduction/async-support",title:"Async Support",description:"Python Liquid supports loading and rendering templates asynchronously. When Template.render_async()",source:"@site/docs/introduction/async-support.md",sourceDirName:"introduction",slug:"/introduction/async-support",permalink:"/liquid/introduction/async-support",editUrl:"https://github.com/jg-rp/liquid/tree/docs/docs/introduction/async-support.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"HTML Auto-Escape",permalink:"/liquid/introduction/auto-escape"},next:{title:"Custom Filters",permalink:"/liquid/guides/custom-filters"}},l=[{value:"Async Loaders",id:"async-loaders",children:[],level:2},{value:"Async Drops",id:"async-drops",children:[],level:2}],u={toc:l};function d(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"async-support"},"Async Support"),(0,o.kt)("p",null,"Python Liquid supports loading and rendering templates asynchronously. When ",(0,o.kt)("a",{parentName:"p",href:"../api/BoundTemplate"},"Template.render_async()"),"\nis awaited, ",(0,o.kt)("a",{parentName:"p",href:"../language/tags#render"},"render")," and ",(0,o.kt)("a",{parentName:"p",href:"../language/tags#include"},"include")," tags will use\n",(0,o.kt)("a",{parentName:"p",href:"../api/Environment#get-template-async"},"Environment.get_template_async()"),", which delegates to ",(0,o.kt)("a",{parentName:"p",href:"../api/filesystemloader#get_source_async"},"get_source_async()")," of the configured template loader."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'import asyncio\nfrom liquid import Environment, FileSystemLoader\n\nenv = Environment(loader=FileSystemLoader("templates/"))\n\nasync def coro():\n    template = await env.get_template_async("index.html")\n    return await template.render_async(you="World")\n\nresult = asyncio.run(coro())\n')),(0,o.kt)("h2",{id:"async-loaders"},"Async Loaders"),(0,o.kt)("p",null,"Custom template loaders should implement ",(0,o.kt)("a",{parentName:"p",href:"../api/filesystemloader#get_source_async"},"get_source_async()"),"\nand pass a coroutine as the ",(0,o.kt)("inlineCode",{parentName:"p"},"uptodate")," argument to ",(0,o.kt)("inlineCode",{parentName:"p"},"TemplateSource"),"."),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{parentName:"p",href:"../guides/custom-loaders#async-database-loader"},"AsyncDatabaseLoader")," for an example that loads\ntemplates from a PostgreSQL database asynchronously."),(0,o.kt)("h2",{id:"async-drops"},"Async Drops"),(0,o.kt)("p",null,"Custom ",(0,o.kt)("a",{parentName:"p",href:"objects-and-drops"},"drops")," can implement ",(0,o.kt)("inlineCode",{parentName:"p"},"__getitem_async__()"),". If an instance of a drop that\nimplements ",(0,o.kt)("inlineCode",{parentName:"p"},"__getitem_async__()")," appears in a ",(0,o.kt)("a",{parentName:"p",href:"../api/BoundTemplate#render_async"},"render_async()"),"\ncontext, ",(0,o.kt)("inlineCode",{parentName:"p"},"__getitem_async__()")," will be awaited instead of calling ",(0,o.kt)("inlineCode",{parentName:"p"},"__getitem__()"),"."),(0,o.kt)("p",null,"Most likely used for lazy loading objects from a database, an async drop could look something like\nthis."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'class AsyncCollection(abc.Mapping):\n    def __init__(self, val):\n        self.keys = ["products"]\n        self.cached_products = []\n\n    def __len__(self):\n        return 1\n\n    def __iter__(self):\n        return iter(self["products"])\n\n    async def __aiter__(self):\n        # Note that Liquid\'s built-in `for` loop does not yet support async iteration.\n        return iter(self.__getitem_async__("products"))\n\n    def __getitem__(self, k):\n        if not self.cached_products:\n            # Blocking IO here\n            self.cached_products = get_stuff_from_database()\n        return self.cache_products\n\n    async def __getitem_async__(self, k):\n        if not self.cached_products:\n            # Do async IO here.\n            self.cached_products = await get_stuff_from_database_async()\n        return self.cache_products\n')))}d.isMDXComponent=!0}}]);